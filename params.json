{"name":"Accumulo-jmxtrans-ganglia","tagline":"","body":"accumulo-jmxtrans-ganglia\r\n=========================\r\n\r\nAccumulo JMX metrics integration with jmxtrans, ganglia and nagios\r\n\r\n\r\nTest setup\r\n\r\nIn this test setup, there are 2 servers (c6401.ambari.apache.org) and (c6402.ambari.apache.org) referred in short as c6401 and c6402 in the document. Ambari was used to install HDP on these nodes and accumulo was installed on top based on rpms. \r\n\r\nServices on c6401 (only related to ambari and ganglia/nagios)\r\n\r\n1. Accumulo Master\r\n2. Accumulo TabletServer\r\n3. Accumulo GC\r\n4. Accumulo Tracer\r\n5. Ganglia (individual gmond services running to collect metrics for multiple services)\r\n\r\n\r\nService on c6402\r\n\r\n1. Accumulo TabletServer\r\n2. Nagios Server\r\n3. Ganglia (gmond and gmetad) (indiviual gmond services running to collection metrics for multiple services, we add a new gmond here to collect accumulo metrics from all hosts)\r\n\r\nWARNING:: If ganglia and nagios are restarted from ambari UI, the configuration changes are overwritten. Careful not to do that and take a backup. Ultimately, all these changes will be integrated into ambari to let ambari configure for you. \r\n\r\nSteps:\r\n\r\n\r\n1. Edit accumulo-env.sh on both hosts to enable JMX monitoring restart accumulo. \r\n\r\nexport ACCUMULO_TSERVER_OPTS=\"-Dcom.sun.management.jmxremote.port=12341 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false $ACCUMULO_TSERVER_OPTS\"\r\nexport ACCUMULO_MASTER_OPTS=\"-Dcom.sun.management.jmxremote.port=12342 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false $ACCUMULO_MASTER_OPTS\"\r\nexport ACCUMULO_MONITOR_OPTS=\"-Dcom.sun.management.jmxremote.port=12343 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false $ACCUMULO_MONITOR_OPTS\"\r\nexport ACCUMULO_GC_OPTS=\"-Dcom.sun.management.jmxremote.port=12344 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false $ACCUMULO_GC_OPTS\"\r\n\r\nThis enables JMX with no SSL or authentication (TODO: Need to change them to enable SSL and authentication). \r\n\r\nJMX Metrics for TabletServer can now be collected on port 12341. \r\n\r\n\r\n2. gmond (on c6402): I created a new gmond service to collect all accumulo related metrics. This gmond service is only run on c6402 (unlike other gmonds that run on all 2 hosts and collect metrics locally - can be changed to collect metrics locally)\r\n\r\nFor convenience, I am copying gmond config from /etc/ganglia/hdp/HDPHBaseRegionServers. (copy whole directory to /etc/ganglia/hdp/HDPAcccumuloServers). Note that ganglia metrics for HBase runs muliple collectors, one each for HBaseMaster and HBaseRegionServers while we will run one to collect all metrics from Accumulo)  \r\n\r\nEdit /etc/ganglia/hdp/HDPAccumuloServers/gmond.core.conf and change cluster {name} to HDPAccumuloServers and  tcp_accept_channel {port} to 9666 (or any other port you would like)\r\nEdit /etc/ganglia/hdp/HDPAccumuloServers/conf.d/gmond.master.conf to change udp_rcv_channel {port} to 9666\r\nEdit /etc/ganglia/hpd/HDPAccumuloServers/conf.d/gmond.slave.conf to change udp_send_channel {port} to 9666\r\n\r\nCreate a directory /var/run/ganglia/hdp/HDPAccumuloServers and start gmond for collecting accumulo metrics\r\n/usr/sbin/gmond --conf=/etc/ganglia/hdp/HDPAccumuloServers/gmond.core.conf --pid-file=/var/run/ganglia/hdp/HDPAccumuloServers/gmond.pid\r\n\r\n3. gmetad (on C6402). Edit /etc/ganglia/hdp/gmetad.conf and add  data_source \"HDPAccumuloServers\" c6402.ambari.apache.org:9666\r\nwhere datasources are listed\r\n\r\nRestart gmetad. service hdp-metad restart\r\n\r\n\r\n4. JMXTRANS (on c6402):: Install jmxtrans using rpm (https://github.com/downloads/jmxtrans/jmxtrans/jmxtrans-20121016.145842.6a28c97fbb-0.noarch.rpm). Its installed in /usr/share/jmxtrans (executable) and picks configuration from /var/lib/jmxtrans/. \r\nCreated accumulo.json in /var/lib/jmxtrans. \r\nStart jmxtrans (/usr/share/jmxtrans start /var/lib/jmxtrans/accumulo.json). In this configuration, we are using jmxtrans on c6402 to read JMX metrics of TabletServers from both c6401 and c6402 and write into accumulo gmond collector running on c6402.  \r\n\r\n\r\n\r\n5. Nagios (on c6402):: Once we have metrics in place, we can use nagios to send alerts in any metrics are out of range or if any service goes down. \r\n\r\nEdit /etc/nagios/object/hadoop-hostgroups.cfg to add all accumulo service hosts \r\n\r\ndefine hostgroup {\r\n        hostgroup_name  accumulomasters\r\n        alias           accumulomasters\r\n        members         c6401.ambari.apache.org\r\n}\r\ndefine hostgroup {\r\n        hostgroup_name  accumulotservers\r\n        alias           accumulotservers\r\n        members         c6401.ambari.apache.org,c6402.ambari.apache.org\r\n}\r\ndefine hostgroup {\r\n        hostgroup_name  accumulotracers\r\n        alias           accumulotracers\r\n        members         c6401.ambari.apache.org\r\n}\r\n\r\nEdit /etc/nagios/object/hadoop-commands.cfg to all check_ganglia that can check a gmond service\r\n\r\ndefine command {\r\n  command_name check_ganglia\r\n  command_line $USER1$/check_ganglia.py -h $HOSTNAME$ -m $ARG1$ -w $ARG2$ -c $ARG3$ -p $ARG4$\r\n}\r\n\r\nCopy check_ganglia.py(https://raw.githubusercontent.com/ganglia/monitor-core/master/contrib/check_ganglia.py)  to /usr/lib64/nagios/plugins/\r\n\r\nEdit /etc/nagios/object/hadoop-servicegroups.cfg and add\r\n\r\ndefine servicegroup {\r\n  servicegroup_name ACCUMULO\r\n  alias ACCUMULO Checks\r\n}\r\n\r\nEdit /etc/nagios/object/hadoop-services.cfg and add \r\n\r\n> # ACCUMULO::TSERVER Checks\r\n> define service {\r\n>         hostgroup_name          accumulotservers\r\n>         use                     hadoop-service\r\n>         service_description     TSERVER::TabletServer process\r\n>         servicegroups           ACCUMULO\r\n>         check_command           check_tcp_wrapper!9997!-w 1 -c 1\r\n>         normal_check_interval   1\r\n>         retry_check_interval    0.5\r\n>         max_check_attempts      3\r\n> }\r\n\r\n> define service {\r\n>         hostgroup_name          accumulotservers\r\n>         use                     hadoop-service\r\n>         service_description     TSERVER:: TableServer load\r\n>         servicegroups           ACCUMULO\r\n>         check_command           check_ganglia!Accumulo.Ingest!50!60!9666\r\n>         normal_check_interval   1\r\n>         retry_check_interval    0.5\r\n>         max_check_attempts      3\r\n> }\r\n\r\n> define service {\r\n>         hostgroup_name          accumulotservers\r\n>         use                     hadoop-service\r\n>         service_description     TSERVER:: TableServer load\r\n>         servicegroups           ACCUMULO\r\n>         check_command           check_ganglia!Accumulo.ScanAvgTime!4!6!9666\r\n>         normal_check_interval   1\r\n>         retry_check_interval    0.5\r\n>         max_check_attempts      3\r\n> }\r\n\r\n> define service {\r\n>         hostgroup_name          accumulomasters\r\n>         use                     hadoop-service\r\n>         service_description     MASTER::Master process\r\n>         servicegroups           ACCUMULO\r\n>         check_command           check_tcp_wrapper!9999!-w 1 -c 1\r\n>         normal_check_interval   1\r\n>         retry_check_interval    0.5\r\n>         max_check_attempts      3\r\n> }\r\n\r\n> define service {\r\n>         hostgroup_name          accumulotracers\r\n>         use                     hadoop-service\r\n>         service_description     TRACER::Tracer process\r\n>         servicegroups           ACCUMULO\r\n>         check_command           check_tcp_wrapper!12234!-w 1 -c 1\r\n>         normal_check_interval   1\r\n>         retry_check_interval    0.5\r\n>         max_check_attempts      3\r\n> }\r\n\r\n> define service {\r\n>         host_name               c6401.ambari.apache.org\r\n>         use                     hadoop-service\r\n>         service_description     GC::gc process\r\n>         servicegroups           ACCUMULO\r\n>         check_command           check_tcp_wrapper!50091!-w 1 -c 1\r\n>         normal_check_interval   1\r\n>         retry_check_interval    0.5\r\n>         max_check_attempts      3\r\n> }\r\n\r\n> define service {\r\n>         host_name               c6401.ambari.apache.org\r\n>         use                     hadoop-service\r\n>         service_description     MONITOR::monitor process\r\n>         servicegroups           ACCUMULO\r\n>         check_command           check_tcp_wrapper!50095!-w 1 -c 1\r\n>         normal_check_interval   1\r\n>         retry_check_interval    0.5\r\n>         max_check_attempts      3\r\n> }\r\n\r\nRestart Nagios (service nagios restart)\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}